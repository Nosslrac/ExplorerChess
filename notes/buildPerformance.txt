Build_v1:
Avg kN/s: 240837

Build_v2:
Check for pawns on EP rank in make move to more often template out en passant
Avg kN/s: 225627


Build_v3:
Template castling rights in the search algorithm
Avg kN/s: 242424


------LAPTOP TESTING (ABOUT 50 % LOWER NUMBERS EXPECTED)---------

Build normal make move:
Avg kN/s:
185,372
184,662
179,840

Build switch case make move:
Avg kN/s:
184,258
188,309
188,262
193,253

Build with incremental hash in doMove implemented (switch case make move, which works better with hashing aswell):
Avg kN/s:
180,493
174,166
178,471

Above build when utilizing hashing in the search:
Avg kN/s:
1,029,550
1,070,330 
1,063,730


Update visual studio
Avg kN/s:
1,103,520

1.08577e+06


Funny improvement: Removing the static assert in attackBB gave little speed up:
Avg kN/s:
1,100,840

Without clearing transpositionTable in perft:
Avg kN/s:
1,143,250

With robin_hood hash table instead of std
Avg kN/s:
1,353,720

